#legendView {
	
	@include transition(all 150ms);

	position: absolute;
	right: -16.9em;
	top: 0;
	
	@include box-sizing(border-box);
	width: 20em;
	height: 100%;
	padding: 2em 0;

	background-color: $black_alpha;
	color: $gray50;

	@include display-flex;
	@include flex-direction(column);

	.filter-module {

	    margin-bottom: 2em;
		text-align: center;

		h3 {
			text-align: left;
			font-weight: normal;
			text-transform: uppercase;
			color: $gray50;
			padding-left: .5em;
			font-size: 0.9em;
			visibility: hidden;
		}
	}

	.reset-module {
		@include order(0);
	}
	.category-module {
		@include order(1);
	}

	.entity-module {
		@include order(2);
		visibility: hidden;
	}

	.row-container {
		@include display-flex;

		.entity-container {
			@include flex-grow(1);
			@include flex-basis(100%);
			
			@include display-flex;
		    @include flex-direction(column);
		    @include align-items(center);
			
			cursor: pointer;

			.entity {
				@include entityShapes;
				height: 2em;
				width: 2em;
		        border: 2px solid $white;
			}
			
			.label {
				color: $gray50;
				font-size: .9em;
			    padding-top: 0.5em;
			}

			&:hover {
				.label { color: $white; }
			}
		}

	}

	.std-container {
		margin-bottom: 1em;
		color: $white;

		&.extended {
			.cat-container .nippus {
				@include transform(rotate(180deg));
			}

			.sub-container {
				max-height: 300px; /* the height is not real, just a work around to make the transition working, because it needs a specific value */
			}
		}
	}

	.cat-container {

		position: relative;
		width: 100%;
		height: 2.5em;
		line-height: 2.5em;
		cursor: pointer;
		
		@include categoryColors($alpha_background: .4);
		border-left: .5rem solid;

		.icon {
			
			@include categorySymbols;
			position: absolute;
			top: 0;
			left: 0;
			width: 2.5em;
			height: 2.5em;
			
			@include transition(all 150ms);
		}

		p {
			position: absolute;
			top: 0;
			left: 3.5em;
			margin: 0;
			text-transform: uppercase;
			font-weight: 300;
			text-overflow: ellipsis;
			width: calc(100% - 6em);
			text-align: left;
			overflow: hidden;
			white-space: nowrap;
		}

		.nippus {
			position: absolute;
			top: 0;
			right: 0;
			width: 2.5em;
			height: 2.5em;
			background-repeat: no-repeat;
			background-position: center center;
			background-image: url("../img/icon_84.svg");
			@include background-size(30%);
			cursor: pointer;
			@include transition(transform 100ms);
			opacity: .8;

			&:hover {
				opacity: 1;
			}
		}

		&.filter-reset {
			display: none;
			opacity: 1 !important;
			.icon {visibility: hidden;}
		}

		&:hover {
			opacity: 1 !important;
			
			p { @include text-shadow( 0px 0px 2px rgba(255, 255, 255, 1) ); }
			
		}

		&.inactive {
			opacity: .3;
		}

	}

	.sub-container {
		@include transition(max-height 250ms);
		@include categoryColors($alpha_background: .1);
		
		max-height: 0;
		overflow: hidden;

		.subcat-container {
			@include categoryColors();
			background: none !important;
			border-left: .5rem solid;
			
			.icon {
				
				@include categorySymbols;
				@include background-size(50%);
				
				float: left;			
				width: 2.5em;
				height: 2.5em;
				margin-left: .5em;
				cursor: pointer;
			}

			p {
				margin: 0 0 0 3.5em;
				text-overflow: ellipsis;
				height: 2.5em;
				line-height: 2.5em;
				text-align: left;
				cursor: pointer;
				overflow: hidden;
    			white-space: nowrap;
			}

			&.inactive {
				opacity: .3;
			}

			&:hover {
				opacity: 1 !important;
				
				p { @include text-shadow( 0px 0px 2px rgba(255, 255, 255, 1) ); }
			}
		}

	}

			/*@include flex-grow(1);*/
			/*@include flex-basis(100%);*/
			
		    /*@include flex-direction(column);*/

	.attribute-module {
		@include order(3);
		visibility: hidden;

		.attribute-container {
			padding-left: 2em;
		    margin-bottom: 1em;
			
			@include display-flex;
	    	@include align-items(center);

			input {
				width: 1.5em;
				height: 1.5em;
	    		cursor: pointer;
			}

			label {
				text-indent: 1em;
	    		cursor: pointer;
			}

			&:hover {
				label {
					color: $white;
				}				
			}
		}
	}

	&.filter-active {

		.cat-container.filter-reset { display: block; }
	}

	&:hover, &.active {

		right: 0 !important;

		.filter-module {
			h3 { visibility: visible; }
		}
		.entity-module { visibility: visible; }
		.attribute-module { visibility: visible; }

		.cat-container .icon { margin-left: .5em; }

	}

}

.mobile {
	#legendView {
		right: -20em;
		overflow: scroll;
	}
}